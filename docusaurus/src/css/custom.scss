/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */
:root {
  --ifm-color-primary: #25c2a0;
  --ifm-color-primary-dark: rgb(33, 175, 144);
  --ifm-color-primary-darker: rgb(31, 165, 136);
  --ifm-color-primary-darkest: rgb(26, 136, 112);
  --ifm-color-primary-light: rgb(70, 203, 174);
  --ifm-color-primary-lighter: rgb(102, 212, 189);
  --ifm-color-primary-lightest: rgb(146, 224, 208);
  --ifm-code-font-size: 95%;
}

.docusaurus-highlight-code-line {
  background-color: rgba(0, 0, 0, 0.1);
  display: block;
  margin: 0 calc(-1 * var(--ifm-pre-padding));
  padding: 0 var(--ifm-pre-padding);
}

html[data-theme='dark'] .docusaurus-highlight-code-line {
  background-color: rgba(0, 0, 0, 0.3);
}

body.wide-mdx .container {
  // Research で幅を広げる
  // max-width はともかく，--ifm-col-width を設定するのは若干ハック感があるような気もする
  max-width: none;
  div.col--8 {
    // markdown 本体が表示される領域
    // default value: --ifm-col-width: calc(8 / 12 * 100%);
    --ifm-col-width: calc(10 / 12 * 100%);
  }
  div.col--2 {
    // markdown で目次が表示される領域
    // Research では目次が表示されないので，0% にする
    --ifm-col-width: 0%;
  }
}

html[lang='ja'] .ja-hidden {
  display: none;
}
html[lang='en'] .en-hidden {
  display: none;
}

// PC画面の半分の横幅くらいだったら navbar は普通に表示してほしい．
// "996px" は docusaurus や infima にハードコードされている．
// media query では CSS 変数が使えないので，これを動的に指定するのは無理そう．
// なので，苦肉の策として無理矢理上書きすることにした．
// 当初は !important を使っていたけど，詳細度の調節の方がまだマシな気がしたので変えた．
$docusaurus-mobile-max-width: 996px;
@media screen and (min-width: 600px) and (max-width: $docusaurus-mobile-max-width) {
  .navbar .navbar__item {
    // 通常の navbar item の表示設定
    // - ここは !important をつけない方が良い．
    //   + !important をつけると，.en-hidden なども上書きしてしまう．
    //   + !important をつけなければ，.en-hidden などの方が優先される．
    //     html[lang='en']がある分詳細度(specificity)が高いので．
    // - 当初は .navbar はつけてなかったけど，後からつけた
    //   + npm start だと .navbar をつけなくても infima 内の指定より優先されていた．
    //     (参考: node_modules/infima/dist/css/default/default.css)
    //   + npm run build && npm run serve だと，.navbar をつけないとダメだった．
    //     最適化などにより CSS の読み込み順序が変わった…？
    display: inline-block;
  }
  // div.toggle_node_modules-\@docusaurus-theme-classic-lib-next-theme-Navbar-styles-module {
  //   // ページ右上にある light/dark を選ぶボタンの表示設定
  //   // - 詳細度を上げるために div をつけた．
  //   //   !important をつけるよりはマシなはず…
  //   // - 上書きしたいのは，下記の CSS 内にある .toggle { display: none; }
  //   //   node_modules/@docusaurus/theme-classic/lib-next/theme/Navbar/styles.module.css
  //   // - CSS modules で生成されたクラス名なので直接指定するのは良くなさそう…
  //   //   + npm start ではこれで動いていた
  //   //   + npm run build && npm run serve したら動かなくなった．
  //   //     クラス名が簡略化されて toggle_iYfV のようになってしまったため．
  //   display: block;
  // }
}
